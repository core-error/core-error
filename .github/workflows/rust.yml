name: Rust

on: [push]

jobs:
  test:
    name: tests (${{ matrix.rust }} on ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        rust: [stable, beta, nightly, 1.6.0]
    steps:
      - uses: actions/checkout@master
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true
      - name: Version
        run: rustup --version && cargo --version --verbose && rustc --version --verbose
      - name: Build
        run: cargo build --no-default-features --verbose
      - name: Run tests
        run: cargo test --no-default-features --verbose
  nostdbuild:
    name: true no-std build
      - uses: actions/checkout@master
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.36.0
          target: thumbv6m-none-eabi
          override: true
      - name: Version
        run: rustup --version && cargo --version --verbose && rustc --version --verbose
      - name: Build
        run: cargo build --target=thumbv6m-none-eabi --no-default-features --features=alloc --verbose
  lint:
    name: lint
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@master
      - id: rustfmt
        uses: actions-rs/components-nightly@v1
        with:
          component: rustfmt
      - uses: actions-rs/toolchain@v1
        with:
            toolchain: ${{ steps.rustfmt.outputs.toolchain }}
            override: true
      - run: rustup component add rustfmt
      - name: Formatting
        run: cargo fmt --all -- --check
      - id: clippy
        uses: actions-rs/components-nightly@v1
        with:
          component: clippy
      - uses: actions-rs/toolchain@v1
        with:
            toolchain: ${{ steps.clippy.outputs.toolchain }}
            override: true
      - run: rustup component add clippy
      - name: Idioms
        run: cargo clippy --all -- -D clippy::all
