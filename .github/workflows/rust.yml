name: Rust

on: [push]

jobs:
  coretest:
    name: test with core (Rust ${{ matrix.rust }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [stable, beta, nightly, 1.6.0, 1.7.0, 1.8.0, 1.9.0, 1.10.0, 1.11.0, 1.12.0, 1.13.0, 1.14.0, 1.15.0, 1.16.0, 1.17.0, 1.18.0, 1.19.0, 1.20.0, 1.21.0, 1.22.0, 1.23.0, 1.24.0, 1.25.0, 1.26.0, 1.27.0, 1.28.0, 1.29.0, 1.30.0, 1.31.0, 1.32.0, 1.33.0, 1.34.0, 1.35.0, 1.36.0]
    steps:
      - uses: actions/checkout@master
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true
      - name: Version
        run: rustup --version && cargo --version --verbose && rustc --version --verbose
      - name: Build
        run: cargo build --no-default-features --verbose
      - name: Run tests
        run: cargo test --no-default-features --verbose
  alloctest:
    name: test with alloc (Rust ${{ matrix.rust }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [stable, beta, nightly, 1.36.0]
    steps:
      - uses: actions/checkout@master
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true
      - name: Version
        run: rustup --version && cargo --version --verbose && rustc --version --verbose
      - name: Build
        run: cargo build --no-default-features --features=alloc --verbose
      - name: Run tests
        run: cargo test --no-default-features --features=alloc --verbose
  stdtest:
    name: test with std (Rust ${{ matrix.rust }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [stable, beta, nightly, 1.0.0]
    steps:
      - uses: actions/checkout@master
      - name: Lockfile
        run: cargo update
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true
      - name: Version
        run: rustup --version && cargo --version --verbose && rustc --version --verbose
      - name: Build
        run: cargo build --no-default-features --features=std --verbose
      - name: Run tests
        run: cargo test --no-default-features --features=std --verbose
  nostdbuild:
    name: true no-std build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          target: thumbv6m-none-eabi
          override: true
      - name: Version
        run: rustup --version && cargo --version --verbose && rustc --version --verbose
      - name: Lockfile
        run: cargo update -Zminimal-versions
      - name: Build
        run: cargo build --target=thumbv6m-none-eabi --no-default-features --features=alloc --verbose
  lint:
    name: lint
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@master
      - id: rustfmt
        uses: actions-rs/components-nightly@v1
        with:
          component: rustfmt
      - uses: actions-rs/toolchain@v1
        with:
            toolchain: ${{ steps.rustfmt.outputs.toolchain }}
            override: true
      - run: rustup component add rustfmt
      - name: Formatting
        run: cargo fmt --all -- --check
      - id: clippy
        uses: actions-rs/components-nightly@v1
        with:
          component: clippy
      - uses: actions-rs/toolchain@v1
        with:
            toolchain: ${{ steps.clippy.outputs.toolchain }}
            override: true
      - run: rustup component add clippy
      - name: Idioms
        run: cargo clippy --all -- -D clippy::all
